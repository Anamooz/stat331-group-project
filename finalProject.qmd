---
title: "Stat 331 Group Project"
author: "Tevan Kim, Will Ton, Eli Newman, Trycia Vong"
format: 
  html:
    embed-resources: true
    code-tools: true
    toc: true
editor: source
execute: 
  error: true
  echo: true
  message: false
  warning: false
---

```{r setup}
library(ggplot2)
library(tidyverse)
library(janitor)
library(knitr)
library(gganimate)
library(gifski)
library(broom)
library(kableExtra)

gdp <- read_csv("GDP_data.csv", col_types = cols(.default = "c"))
co2 <- read_csv("CO2_Data.csv", col_types = cols(.default = "c"))
```

## Combine data into long format and combine

```{r}
gpd_long <- gdp |> 
  pivot_longer(cols = -country,
               names_to = "year",
               values_to = "GDP")


co2_long <- co2 |> 
  pivot_longer(cols = -country,
               names_to = "year",
               values_to = "co2_emissions")


combined_data <- full_join(gpd_long, co2_long, by = c("country", "year")) |> 
  clean_names()
```

## Introduction

\[Description of data\].

The data we are exploring is the GDP per capita of every country in the world from 1800 projected until 2100 in 2017 international dollars, and the CO2 emissions per capita of every country in the world from 1800 until 2022 in tonnes per capita.

Understanding the relationship between economic growth and environmental impact is essential in today's society. In this report we explore the association between gross domestic product (GDP) per capita and carbon dioxide (CO₂) emissions per capita across the world over time. By analyzing these variables, we aim to look at whether higher levels of income are linked to greater environmental costs, and to what extent economic development correlates with carbon output. Understanding this trend could help influence policy making into the future as we aim to curb our carbon emissions and preserve our planet. 

https://www.iea.org/commentaries/the-relationship-between-growth-in-gdp-and-co2-has-loosened-it-needs-to-be-cut-completely

**Hypothesis:** Based on our initial research, we hypothesize that most countries on this list will have a direct linear relationship for most of time, but will have an inverse linear trend toward more recent years. This, we posit, is due to the fact that more countries have begun adopting clean power generation more widely that previous decades and phasing out fossil fuels. Therefore, GDP per capita continues to grow without having to burn so much CO2.

```{r}

```

## Data Cleaning

By analyzing the data below, it was determined that all countries were missing CO2 emissions data beyond 2022. Therefore this study will only include data from years 1800 to 2022 (this drops 15,210 observations).

Additionally, it was determined that the only countries missing CO2 emissions data before 2022 were Monaco and San Marino, so those countries will be dropped from this analysis. Similarly, Liechtenstein is missing much of its GDP data before 2022, so it will also be dropped from the analysis. These countries totaled 669 observations, so in total 15,879 observations were dropped.

```{r}
#| code-fold: true

# Group Countries into larger regions
europe <- c(
  "Albania", "Andorra", "Austria", "Belarus", "Belgium",
  "Bosnia and Herzegovina", "Bulgaria", "Croatia", "Cyprus",
  "Czech Republic", "Denmark", "Estonia", "Finland", "France",
  "Germany", "Greece", "Hungary", "Iceland", "Ireland", "Italy",
  "Kosovo", "Latvia", "Liechtenstein", "Lithuania", "Luxembourg",
  "Malta", "Moldova", "Monaco", "Montenegro", "Netherlands",
  "North Macedonia", "Norway", "Poland", "Portugal", "Romania",
  "Russia", "San Marino", "Serbia", "Slovakia", "Slovenia",
  "Spain", "Sweden", "Switzerland", "Ukraine", "United Kingdom",
  "Vatican City","UK","Slovak Republic"
)

africa <- c(
  "Algeria","Angola","Benin","Botswana","Burkina Faso","Burundi",
  "Cabo Verde","Cameroon","Central African Republic","Chad",
  "Comoros","Congo, Republic of","Congo, Democratic Republic of",
  "Côte d'Ivoire","Djibouti","Egypt","Equatorial Guinea","Eritrea",
  "Eswatini","Ethiopia","Gabon","Gambia","Ghana","Guinea",
  "Guinea-Bissau","Kenya","Lesotho","Liberia","Libya","Madagascar",
  "Malawi","Mali","Mauritania","Mauritius","Morocco","Mozambique",
  "Namibia","Niger","Nigeria","Rwanda","São Tomé and Príncipe",
  "Senegal","Seychelles","Sierra Leone","Somalia","South Africa",
  "South Sudan","Sudan","Tanzania","Togo","Tunisia","Uganda","Zambia","Zimbabwe",
  "Cote d'Ivoire","Congo, Dem. Rep.","Cape Verde","Sao Tome and Principe","Congo, Rep."
)

asia <- c(
  "Afghanistan","Armenia","Azerbaijan","Bahrain","Bangladesh","Bhutan",
  "Brunei","Cambodia","China","Cyprus","Georgia","India","Indonesia",
  "Iran","Iraq","Israel","Japan","Jordan","Kazakhstan","Kuwait","Kyrgyzstan",
  "Laos","Lebanon","Malaysia","Maldives","Mongolia","Myanmar","Nepal",
  "North Korea","Oman","Pakistan","Palestine","Philippines","Qatar",
  "Saudi Arabia","Singapore","South Korea","Sri Lanka","Syria","Tajikistan",
  "Thailand","Timor-Leste","Turkey","Turkmenistan","UAE","Uzbekistan","Vietnam","Yemen",
  "Hong Kong, China","Kyrgyz Republic","Lao","Taiwan"
)

north_america <- c(
  "Antigua and Barbuda","Bahamas","Barbados","Belize","Canada",
  "Costa Rica","Cuba","Dominica","Dominican Republic","El Salvador",
  "Grenada","Guatemala","Haiti","Honduras","Jamaica","Mexico",
  "Nicaragua","Panama","Saint Kitts and Nevis","Saint Lucia",
  "Saint Vincent and the Grenadines","Trinidad and Tobago","United States","USA"
)

south_america <- c(
  "Argentina","Bolivia","Brazil","Chile","Colombia","Ecuador",
  "Guyana","Paraguay","Peru","Suriname","Uruguay","Venezuela",
  "St. Kitts and Nevis","St. Lucia","St. Vincent and the Grenadines"
)

oceania <- c(
  "Australia","Fiji","Kiribati","Marshall Islands","Micronesia",
  "Nauru","New Zealand","Palau","Papua New Guinea","Samoa",
  "Solomon Islands","Tonga","Tuvalu","Vanuatu","Micronesia, Fed. Sts."
)
```

```{r}
#| warning: false
#| message: false
#| code-fold: true
#| echo: true
#| results: false

# First, determine if there is a pattern in missing data
combined_data |> 
  filter(if_any(.cols = everything(),
                .fns = is.na)) |> 
  summarize(na_obs = n(),
            across(.cols = country:co2_emissions,
                   ~ any(is.na(.)))) |> 
  kable()

dc_plot <- combined_data |> 
  mutate(year = as.numeric(year),
         country = fct(country),
#         region = fct_collapse(.f = country,
#                               "Europe"        = europe,
#                               "Africa"        = africa,
#                               "Asia"          = asia,
#                               "North America" = north_america,
#                               "South America" = south_america,
#                               "Oceania"       = oceania),
         missing_gdp = is.na(gdp),
         missing_emissions = is.na(co2_emissions)) |> 
  group_by(country, year) |> 
  summarize(prop_missing_gdp = sum(missing_gdp)/n(),
            prop_missing_emissions = sum(missing_emissions)/n()) |> 
  filter(prop_missing_gdp != 0 | prop_missing_emissions != 0,
         !year >= 2023) |> 
  pivot_longer(
    cols      = c(prop_missing_gdp, prop_missing_emissions),
    names_to  = "datatype",
    values_to = "prop_missing") |> 
  ggplot(aes(y = prop_missing,
             x = year,
             fill = datatype)) +
  geom_col(position = position_dodge(width = 0.8),
           width    = 0.7) +
  facet_wrap(~ country) +
  labs(title = "Countries with missing data before 2023",
       subtitle = "Proportion of Missing Data",
       y = "",
       x = "Year",
       fill = "Missing")

combined_data |> 
  filter(year >= 2023) |> 
  summarize("obs_over_2023" = n()) |> 
  kable()

# Then, remove all observation which contain NA, and all observations beyond 2022.
combined_clean <- combined_data |> 
  filter(!if_any(.cols = everything(),
                .fns = is.na),
         !year >= 2023)
```

## Modeling the Relationship between GDP per capita and CO2 emission per capita

Written Components: Present and discuss visualizations of the relationship between the variables. Describe the statistical method used – linear regression. Present the estimated regression model (in notation). Interpret the linear regression coefficients (in context). Describe the fit of the regression model (both in table and written format).

GDP per capita and CO2 emissions have a positive direct relationship; an increase in GDP tends to result in an increase in CO2 emissions. The model we used to describe the trend of the data was linear regression. This was done by taking an average for both GDP and CO2 emissions over all years and performing linear regression calculations over those values. The R-squared value of 0.76 means that there is a strong trend in similarity between the two variables, and it fits a linear model well. The sigma is the standard deviation of the model. In this context, it represents how much the data deviates from the linear model, or how many outliers exist away from the trend. Our std.deviation of about 1 is quite good given the range of values over which the study is conducted. Overall, the model seems to fit quite well with the data and suggests there does exist a relationship between GDP per capita and CO2 emissions per year.

### 2.1: Data Visualization

Plot 1: the relationship between the two quantitative variables we are looking at. (aggregate values over all years for each country)

```{r}
combined_clean |> 
  mutate(
  gdp = case_when(
    grepl("k$", gdp, ignore.case = TRUE) ~ as.numeric(sub("k", "", gdp, ignore.case = TRUE)) * 1000,
    TRUE ~ as.numeric(gsub(",", "", gdp))
  )) |>
  mutate(co2_emissions = as.numeric(gsub(",", "", co2_emissions))) |> 
  group_by(country) |> 
  summarise(avg_gdp = mean(gdp, na.rm = TRUE),
            avg_co2 = mean(co2_emissions, na.rm = TRUE)) |> 
  filter(!is.na(avg_gdp) & !is.na(avg_co2)) |> 
  filter(avg_gdp > 0, avg_co2 > 0) |>  # required for log
  mutate(log_gdp = log(avg_gdp), log_co2 = log(avg_co2)) |> #log transformation
  ggplot(aes(x = log_gdp, y = log_co2)) +
  geom_point(color = "steelblue", size = 3) +
  labs(
    title = "Average CO2 Emissions vs. Average GDP per Country",
    x = "Average GDP Per Capita",
    y = "Average CO₂ Emissions Per Capita") +
  theme_minimal()
```

Plot 2: how the relationship from plot 1 changes over time(animated plot)

```{r}
animated_data <- combined_clean |> 
    mutate(
  gdp = case_when(
    grepl("k$", gdp, ignore.case = TRUE) ~ as.numeric(sub("k", "", gdp, ignore.case = TRUE)) * 1000,
    TRUE ~ as.numeric(gsub(",", "", gdp))
  )) |>
  mutate(co2_emissions = as.numeric(gsub(",", "", co2_emissions))) |> 
  mutate(year = as.integer(year)) |> 
  group_by(country, year) |> 
  summarise(avg_gdp = mean(gdp, na.rm = TRUE),
            avg_co2 = mean(co2_emissions, na.rm = TRUE)) |> 
  filter(!is.na(avg_gdp) & !is.na(avg_co2)) |>
  filter(avg_gdp > 0, avg_co2 > 0) |>  # required for log
  mutate(log_gdp = log(avg_gdp), log_co2 = log(avg_co2)) #log transformation

animated_plot <- ggplot(animated_data, aes(x = log_gdp, y = log_co2)) +
  geom_point(color = "steelblue", size = 3, alpha = 0.7) +
  labs(title = "Average CO2 Emissions vs. Average GDP per Country",
       subtitle = "Year: {frame_time}",
       x = "Log of Average GDP Per Capita",
       y = "Log of Average CO2 Emissions Per Capita") +
  theme_minimal() +
  transition_time(year) +
  ease_aes('linear')


# animate(animated_plot, renderer = gifski_renderer(), width = 800, height = 600, fps = 10)
# anim_save("avg_gdp_vs_co2_over_time.gif", animation = last_animation())

animate(animated_plot, nframes = 100, fps = 10)

```

### 2.2: Linear Regression

Fit a simple linear regression model to the data. To perform your linear regression, you will likely want to summarize your data so you have one x value and one y value per country. You may do this by averaging (or taking the median) across all years, averaging across a subset of years, or picking a year of particular interest ( do the same thing as in plot #1). Make sure you discuss your decision in your written report.

```{r}
#Average gdp and co2 per country over all years
my_model <- combined_clean |>
  group_by(country) |> 
  #turns 12.3k to 12300 or 12k to 12000
  mutate(
  gdp = case_when(
    grepl("k$", gdp, ignore.case = TRUE) ~ as.numeric(sub("k", "", gdp, ignore.case = TRUE)) * 1000,
    TRUE ~ as.numeric(gsub(",", "", gdp))
  )) |>
  mutate(co2_emissions = as.numeric(co2_emissions)) |>
  summarise(avg_gdp_all_years = mean(gdp, na.rm = TRUE),
            avg_co2_all_years = mean(co2_emissions, na.rm = TRUE)) |>
  filter(avg_gdp_all_years > 0, avg_co2_all_years > 0) |>  # required for log
  mutate(log_gdp = log(avg_gdp_all_years), log_co2 = log(avg_co2_all_years)) #linear transformation

regression_data <- lm(log_co2 ~ log_gdp, data = my_model)

tidy(regression_data) |> kable()
broom::glance(regression_data) |>  kable()

# Create a dataframe with fitted values and residuals
residual_data <- my_model |>
  mutate(
    fitted = fitted(regression_data),
    residuals = resid(regression_data)
  )

# Plot residuals vs. fitted values to check linearity
ggplot(residual_data, aes(x = fitted, y = residuals)) +
  geom_point(color = "darkred", size = 3) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "gray40") +
  labs(
    title = "Residual Plot",
    subtitle = "Residuals",
    x = expression("Fitted Values (Predicted " * CO[2] *" Emissions)"),
    y = ""
  ) +
  theme_minimal()

```

### 2.3: Model Fit

An R-squared value of 0.84 means that approximately 84% of the variability in average CO2 emissions can be explained by our model, and therefore by average GDP. This suggests the quality of our model is decent, though 24% of the variability in average CO2 emissions can only be explained through variables outside our model.

```{r}
aug <- augment(regression_data) |> 
  summarize(var_response = var(log_co2),
            var_fitted = var(.fitted),
            var_resid = var(.resid),
            R_squared = var_fitted/var_response)

aug |> 
  kable(col.names  = c("Response (A)", "Fitted (B)", "Residuals", "(B/A)"),
        align     = "c") |> 
  kable_styling(full_width = F,
                bootstrap_options = c("striped")) |> 
  add_header_above(c("Variance" = 3, "R\u00B2" = 1)) |> 
  add_header_above(c("Model Fit" = 4),
                   font_size = "x-large")
```

## Cross-Validation

```{r}

oneIteration <- function (dataset, k){
  test_data <- filter(dataset, fold == k)
  train_data <- filter(dataset, fold != k)
  
  trained_fit <- lm(log_co2 ~ log_gdp, data = train_data)
  
  test_preds <- predict(trained_fit, newdata = test_data)
  
  residual <- test_data$log_co2 - test_preds
  
  return(1 - (var(residual))/(var(test_data$log_co2)))
}

n <- nrow(my_model)
set.seed(57482)

k <- 10
vec <- 1:k
my_model <- my_model |> 
  mutate(fold = sample(rep_len(1:k, length.out = n),
                       size = n)) 

cv <- map_dbl(vec, ~ oneIteration(my_model, .x))
mean(cv)


```
```{r}
#Expression() from geeksforgeeks.org
df <- data.frame(k_fold = vec, r_2 = cv)

df |>
  ggplot(aes(x = k_fold, y = r_2)) +
  geom_point() +
  labs(title = expression("Distribution of R" ^ 2 * " Values vs. K Folds"),
       subtitle = expression("R" ^ 2 * " Values"),
       x = "K Fold Number",
       y = "") +
  geom_hline(yintercept = mean(cv),
             linetype = "dashed",
             size = 0.5,
             color = "black") +
  geom_hline(yintercept = aug$R_squared,
             linetype = "dashed",
             size = 0.5,
             color = "blue") +
  annotate(
    "text",
    x = 9.5,
    y = mean(cv) + 0.01,
    label = "k-fold average",
    color = "black"
  ) +
  annotate(
    "text",
    x = 9.5,
    y = aug$R_squared + 0.01,
    label = "original model fit",
    color = "blue"
  ) +
  scale_x_continuous(limits = c(1, 10), breaks = seq(1, 10, 1)) +
  theme_minimal()
```


## Conclusion

**Citations**

test

https://chatgpt.com/share/6837b5d4-9aa0-8009-9faf-83f213beced7
